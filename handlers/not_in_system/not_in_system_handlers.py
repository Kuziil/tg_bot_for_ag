import logging

from aiogram import Router, F
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from aiogram.utils.i18n import gettext as _
from sqlalchemy.ext.asyncio import AsyncSession

from FSMs.FSMs import FSMFillForm
from db.requests.with_add import add_user
from db.requests.with_emoji import get_str_emojis_in_agency
from filters.filters import IsEmoji, IsBusyEmoji
from keyboards.kb_single_line_vertically import create_menu_keyboard
from lexicon.text_processor.processor import text_for_process_emoji_sent

logger = logging.getLogger(__name__)
not_in_system_router = Router()


@not_in_system_router.message(
    StateFilter(FSMFillForm.fill_username),
    F.text.isalpha(),
)
async def process_name_sent(
        message: Message,
        state: FSMContext,
):
    await state.update_data(username=message.text)
    await message.answer(
        text=_("–ò–º—è –ø—Ä–∏–Ω—è—Ç–æ.\n\n"
               "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —ç–º–æ–¥–∑–∏ –∏–∑ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–≥–æ –Ω–∞–±–æ—Ä–∞.\n"
               "–ï—Å–ª–∏ —Å—Ç–∏–∫–µ—Ä –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –∏–∑ Telegram Premium,"
               "—Ç–æ –æ–Ω –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω.\n"
               "–≠–º–æ–¥–∑–∏ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤\n"
               "–í –¥–∞–ª—å–Ω–µ–π—à–µ–º –º–æ–∂–Ω–æ –≤—Å–µ–≥–¥–∞ –∑–∞–º–µ–Ω–∏—Ç—å —ç–º–æ–¥–∑–∏"),
        reply_markup=create_menu_keyboard("busy_emojis"),
    )
    await state.set_state(FSMFillForm.fill_emoji)


@not_in_system_router.message(
    StateFilter(FSMFillForm.fill_username),
)
async def warning_not_name(
        message: Message,
):
    await message.answer(
        text=_("–î–∞–Ω–Ω–æ–µ –∏–º—è –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç, "
               "–æ–Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã\n\n"
               "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è\n"
               "–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–∑ –±—É–∫–≤")
    )


@not_in_system_router.callback_query(
    StateFilter(FSMFillForm.fill_emoji),
    F.data == "busy_emojis",
)
async def process_show_busy_emojis(
        callback: CallbackQuery,
        state: FSMContext,
        session: AsyncSession,
        agency_id: int,
):
    await callback.message.answer(
        text=await get_str_emojis_in_agency(
            session=session,
            agency_id=agency_id,
        ))
    await callback.answer()
    await state.set_state(FSMFillForm.fill_emoji)


@not_in_system_router.message(
    StateFilter(FSMFillForm.fill_emoji),
    IsEmoji(),
    IsBusyEmoji(),
)
async def warning_busy_emoji(
        message: Message,
        session: AsyncSession,
        agency_id: int
):
    await message.answer(
        text=_("–î–∞–Ω–Ω–æ–µ —ç–º–æ–¥–∑–∏ —É–∂–µ –∑–∞–Ω—è—Ç–æ, –≤—ã–±–µ—Ä–µ—Ç–µ,"
               "—Ç–æ –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ –¥–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫\n\n"))
    await message.answer(
        text=await get_str_emojis_in_agency(
            session=session,
            agency_id=agency_id,
        ))


@not_in_system_router.message(
    StateFilter(FSMFillForm.fill_emoji),
    IsEmoji(),
)
async def process_emoji_sent(
        message: Message,
        state: FSMContext,
        session: AsyncSession,
        agency_id: int,
):
    st: dict[str, str] = await state.get_data()
    emoji: str = message.text
    username: str = st["username"]
    await add_user(
        session=session,
        username=username,
        emoji=emoji,
        user_tg_id=message.from_user.id,
        agency_id=agency_id,
    )
    await message.answer(
        text=await text_for_process_emoji_sent(username=username, emoji=emoji),
        reply_markup=create_menu_keyboard(
            "check_in",
            "write_a_report",
            "schedule",
            "my_money",
        ),
    )
    await state.clear()


@not_in_system_router.message(
    StateFilter(FSMFillForm.fill_emoji),
)
async def warning_not_emoji(
        message: Message,
):
    await message.answer(
        text=_("–í—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É, –ø—Ä–∏ –≤–≤–æ–¥–µ —ç–º–æ–¥–∑–∏\n\n"
               "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ —ç–º–æ–¥–∑–∏\n"
               "–ù–∞–ø—Ä–∏–º–µ—Ä: üôà")
    )
